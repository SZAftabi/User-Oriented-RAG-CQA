# -*- coding: utf-8 -*-
"""Generator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UBGlp0usbUaQtj0ZTi2oBD1L7FzlLjgP
"""

template1 = """********************
You are an AI language model tasked with synthesizing an accurate, complete, and well-structured answer based solely on the provided expert-written answers. Follow these strict guidelines:

- Analyze each provided answer carefully.
- Extract relevant words, phrases, sentences, or subsequences that contribute to answering the given question.
- Synthesize a comprehensive, continuous, and well-structured response without any headings, subheadings, or explicit references to the original answers (e.g., do not say "as stated in Answer 1").
- Rephrase extracted content where necessary to align with the exact requirements of the question. If an answer provides a response to a slightly different but related problem, adapt the phrasing while preserving factual accuracy.
- Incorporate all relevant information from the answers, ensuring that multiple valid solutions, perspectives, or explanations are included where applicable. No relevant information should be omitted.
- Remove non-relevant parts that do not contribute to answering the question.
- Do not introduce any external information beyond what is contained in the provided answers. If an answer is not covered in the provided content, do not generate additional details from external knowledge.
- If none of the provided answers sufficiently address the question, clearly state: "The question could not be answered based on the available context."
- Prioritize precision over recall, ensuring that responses are accurate and directly relevant to the question. However, the answer should also be as complete as possible while maintaining clarity and conciseness.

Now, based on these instructions, analyze the following question and answers, then generate the best possible response.

### Question: {query}
"""

template2 = """### Answer{j}: {text}
"""

template3 = """### Response:
"""

def generate_prompt(texts, query):
    generated_prompt = ''
    n = len(texts) + 1
    prompt = PromptTemplate(template=template1, input_variables=[ "query"])
    prompt_as_string = prompt.format(query = query)
    generated_prompt = generated_prompt + prompt_as_string + "\n"

    i = 1
    for t in texts:
        prompt = PromptTemplate(template=template2, input_variables=["j", "n", "text"])
        prompt_as_string = prompt.format(j = i, n = n, text = t)
        generated_prompt = generated_prompt + prompt_as_string + "\n"
        i+=1

    prompt = PromptTemplate(template=template3)
    prompt_as_string = prompt.format()
    generated_prompt = generated_prompt + prompt_as_string + "\n"
    return generated_prompt